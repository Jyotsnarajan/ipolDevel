{ 
  "general": { 
    "demo_title"            :  "The Flutter Shutter Code Calculator",
    "input_description"     : "This will perform the demo of the flutter shutter code calculator.",
    "param_description"     : "",
    "enable_crop"           : false,
    "xlink_article"         : "http://www.ipol.im/pub/art/2015/108/"
  }, 
  "build": [
    {
      "build_type"    : "make",
      "url"           : "http://www.ipol.im/pub/art/2015/108/src_code_calculator_2.tar.gz", 
      "srcdir"        : "src_code_calculator_2",
      "binaries"      : [ [".","flutter_optimizer"] ],
      "flags"         : "-j4"
    } ]
  ,
  "inputs": [  ],
  "params": [
    {
      "id"            : "motion_model",
      "type"          : "selection_radio", 
      "label"         : "Velocity model",
      "values"        : {   "Gaussian (truncated at 4*std-dev)":"gaussian", 
                            "Uniform over [-s,s]":"uniform" },
      "default_value" : "gaussian"
    },
    {
      "type"          : "label",
      "label"         : "Choose the motion model and code parameters :"
    },
    {
      "visible"       : "demo.params[0].value == 'gaussian'",
      "id"            : "s1",
      "type"          : "range", 
      "label"         : "Standard deviation",
      "values"        : { "min":0.25, "max":10.0, "step":0.05, "default":0.25 }
    },
    {
      "visible"       : "demo.params[0].value == 'uniform'",
      "id"            : "s2",
      "type"          : "range", 
      "label"         : "Range s:",
      "values"        : { "min":0.25, "max":10.0, "step":0.05, "default":0.25 }
    },
    {
      "id"            : "s3",
      "type"          : "range", 
      "label"         : "Code length L",
      "values"        : { "min":1.0, "max":52.0, "step":1, "default":52 }
    },
    {
      "id"            : "s4",
      "type"          : "range", 
      "label"         : "Relative exposure time (as a factor of the best snapshot exposure time)",
      "values"        : { "min":1.0, "max":5.0, "step":0.1, "default":2 }
    }
  ],
  "run": [ 
    ["motion_model=='gaussian'",
        "flutter_optimizer 0 $s1 $s3 $s4 code.txt TF_code.txt efficiency.txt mean_std.txt >stdout.txt"
    ],
    ["motion_model=='uniform'",
        "flutter_optimizer 1 $s2 $s3 $s4 code.txt TF_code.txt efficiency.txt mean_std.txt >stdout.txt"
    ],
    "python:p = subprocess.Popen(['gnuplot', '-p'], shell=True, stdin=subprocess.PIPE,)",
    "python:p.stdin.write(' set lmargin 10 ;  set rmargin 2 \\n')",
    "python:p.stdin.write(' set xlabel \"Velocity v\" \\n')",
    "python:p.stdin.write(' set ylabel \"Gain factor\" \\n')",
    "python:p.stdin.write(' set yrange [0:5] \\n ')",
    "python:p.stdin.write(' set terminal png size 900, 480\\n')",
    "python:p.stdin.write(' set output \"'+ self.work_dir +'efficiency.png\" \\n')",
    "python:p.stdin.write(' set key on  below box title \"Legend\" \\n')",
    "python:p.stdin.write(' set key left Left reverse \\n ')",
    "python:p.stdin.write(' plot \"'+ self.work_dir +'efficiency.txt\" using 1:2 with lines title \"Gain factor G(v)\" linewidth 3,')",
    "python:p.stdin.write(' \"' + self.work_dir +'efficiency.txt\" using 1:3 with lines title \"Average gain factor\" linewidth 3,')",
    "python:p.stdin.write(' \"' + self.work_dir +'efficiency.txt\" using 1:4 with lines title \"Velocity distribution\" linewidth 2,')",
    "python:p.stdin.write(' \"' + self.work_dir +'efficiency.txt\" using 1:5 with points title \"Gain=1 line. Above this line: the flutter beats the snapshot in terms of RMSE\" linewidth 1 lt 0\\n')",
    "python:p.stdin.write(' exit \\n')",
    "python:p.communicate()",
    "python:self.wait_proc(p, timeout=timeout)",

    "python:p = subprocess.Popen(['gnuplot', '-p'], shell=True, stdin=subprocess.PIPE, )",
    "python:p.stdin.write(' set lmargin 10 ;  set rmargin 2 \\n')",
    "python:p.stdin.write(' set key font \",10\" \\n')",
    "python:p.stdin.write(' set xlabel \"k\" \\n')",
    "python:p.stdin.write(' set ylabel \"Gain\" \\n')",
    "python:p.stdin.write(' set terminal png size 900, 480\\n')",
    "python:p.stdin.write(' set output \"'+ self.work_dir +'code.png\" \\n')",
    "python:p.stdin.write(' set key on  below box title \"Legend\" \\n')",
    "python:p.stdin.write(' set key left Left reverse \\n ')",
    "python:p.stdin.write(' plot \"'+ self.work_dir +'code.txt\" with steps title \"Flutter shutter code\" linewidth 3 \\n')",
    "python:p.stdin.write(' exit \\n')",

    "python:p = subprocess.Popen(['gnuplot', '-p'], shell=True,  stdin=subprocess.PIPE, )",
    "python:p.stdin.write(' set lmargin 5 ;  set rmargin 2 \\n')",
    "python:p.stdin.write(' set key font \",10\" \\n')",
    "python:p.stdin.write(' set xlabel \"xi\" \\n')",
    "python:p.stdin.write(' set ylabel \"Fourier tranform (modulus)\" \\n')",
    "python:p.stdin.write(' set terminal png size 900, 480\\n')",
    "python:p.stdin.write(' set output \"'+ self.work_dir +'TF_code.png\" \\n')",
    "python:p.stdin.write(' set key on  below box title \"Legend\" \\n')",
    "python:p.stdin.write(' set key left Left reverse \\n ')",
    "python:p.stdin.write(' plot \"'+ self.work_dir +'TF_code.txt\" using 1:3 with lines title \"Fourier tranform (modulus) of the flutter shutter function\" linewidth 3,')",
    "python:p.stdin.write(' \"' + self.work_dir +'TF_code.txt\" using 1:2 with lines title \"Ideal Fourier tranform (modulus)\" linewidth 3\\n')",
    "python:p.stdin.write(' exit \\n')",
    "python:p.communicate()",
    "python:self.wait_proc(p, timeout=timeout)"

   ],
  "archive":
    {
      "files" : { 
                  "code.png"        : "flutter code",
                  "TF_code.png"     : "Fourier transform of the flutter shutter function",
                  "efficiency.png"  : "RMSE factor curves"
                }
    }
  ,
  "results": [
    {
      "type"          : "gallery",
      "label"         : "",
      "contents"      : 
        {   
        "Flutter shutter code"                              : "code.png", 
        "Fourier transform of the flutter shutter function" : "TF_code.png", 
        "Gain G(v), and average gain"                       : "efficiency.png"
        },
      "style"         : "'height:'+(480*ZoomFactor)+'px'" 
    },
    {
      "type"          : "text_file", 
      "label"         : "<p>Optimal snapshot</p>",
      "contents"      : "stdout.txt",
      "style"         : "''"
    },
    {
      "type"          : "text_file", 
      "label"         : "<p>Average gain and standard deviation</p>",
      "contents"      : "mean_std.txt",
      "style"         : "''"
    },
    {
      "type"          : "text_file", 
      "label"         : "<p>Flutter Shutter code</p>",
      "contents"      : "code.txt",
      "style"         : "''"
    }
  ]

}