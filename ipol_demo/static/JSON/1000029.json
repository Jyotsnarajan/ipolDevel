{ 
  "general": { 
    "demo_title"            : "LSD: a Line Segment Detector",
    "input_description"     : "",
    "param_description"     : [""],
    "xlink_article"         : "http://www.ipol.im/pub/art/2012/gjmr-lsd/"
  }, 
  "build": [
    {
      "build_type" : "make",
      "url"        : "http://www.ipol.im/pub/art/2012/gjmr-lsd/lsd_1.6.zip", 
      "srcdir"     : "lsd_1.6",
      "binaries"   : [ [".","lsd"] ],
      "flags"      : ""
    } ]
  ,
  "inputs": [ 
      {
          "type"            : "image", 
          "description"     : "input",
          "max_pixels"      : 100000000,
          "max_weight"      : 300000000,
          "dtype"           : "1x8i",
          "ext"             : ".png"
      }
    ],
  "params": [  ],
  "run": [
      "convert input_0.sel.png input_0.sel.pgm",
      "lsd -P output.eps -S output.svg input_0.sel.pgm output.txt",
      "#--- convert the EPS result into a PNG image",
      "gs -dNOPAUSE -dBATCH -sDEVICE=pnggray -dGraphicsAlphaBits=4 -r72 -dEPSCrop -sOutputFile=output.png output.eps",
      "python:im = PIL.Image.open(self.work_dir+'output.png')",
      "python:im = im.convert('L') # corresponds to '1x8i'",
      "python:im = PIL.ImageOps.invert(im)",
      "python:im.save(self.work_dir+'output-inv.png')",
      "#--- save the number of detections",
      "python:num_lines = sum(1 for line in open(self.work_dir+'output.txt'))",
      "python:self.algo_info['num_detections'] = num_lines",
      "#--- save the binary version",
      "lsd --version >version.txt",
      "python:version_file = open(self.work_dir+'version.txt', 'r')",
      "python:version_info = version_file.readline()",
      "python:version_file.close()",
      "python:self.algo_info['version'] = version_info"
  ]
  ,
  "results": [
    {
      "type"          : "html_text", 
      "contents"      : [ "'<br/>'+info.num_detections+' Line Segments were detected.<br/>'" ]
    },
    {
      "type"          : "gallery",
      "label"         : "",
      "contents"      : { "Output":"output.png",
                          "Output inv":"output-inv.png", 
                          "Input":"input_0.sel.png"},
      "style"         : "'height:'+(sizeY*ZoomFactor)+'px'"
    },
    {
      "type"          : "file_download", 
      "label"         : "<b>Download the results:</b>",
      "contents"      : { "EPS":"output.eps", "SVG":"output.svg",
                          "ASCII (see description below)": "output.txt" }
    },
    {
      "type"          : "html_text", 
      "contents"      : [ 
          "<fieldset style='border:2px solid black;background:#eee'><legend>ASCII file description</legend>",
            "Each line is composed of seven numbers separated by spaces, that ",
            "are x1, y1, x2, y2, width, p, -log_nfa. For example, the line: ",
            "</p><pre style='width:50em'>  159.232890 134.369601 160.325338 ",
            "105.613616 2.735466 0.125000 17.212465",
            "</pre><p style='width:50em'>",
            " means that a line segment starting at point (159.232890,134.369601), ",
            "ending at point (160.325338 105.613616) and of width 2.735466 was ",
            "detected. An angle precision p of 0.125 was used, which means a ",
            "gradient angle tolerance of p*180 = 0.125*180 = 22.5 degree. ",
            "The opposite of the logarithm in base 10 of the NFA value of the ",
            "detection was -log_10(NFA)=17.212465, so the NFA value was ",
            "10^(-17.2124656), roughly 6e-18. The length unit is the pixel and ",
            "the origin of coordinates is the center of the top-left pixel (0,0). ",
          "</fieldset>" 
        ]
    }
  ],
  "archive":
    {
      "files" : { "input_0.orig.png"        : "uploaded image",
                  "input_0.png"             : "uploaded image in greyscale",
                  "input_0.sel.png"         : "selected input image",
                  "output.txt"              : "",
                  "output.eps"              : "",
                  "output.svg"              : "",
                  "output.png"              : "",
                  "output-inv.png"          : ""
                },
      "params" :  [  ],
      "info"   : {  "run_time" : "run time", "version" : "program version" }
    }

}