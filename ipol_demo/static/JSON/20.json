{ 
  "general": { 
    "demo_title"            :  "Horn-Schunck Optical Flow with a Multi-Scale Strategy",
    "input_description"     : "Please select or upload the image pair to rectify. Both images must have the same size.",
    "param_description"     : ["You can now run the rectification process."],
    "enable_crop"           : false,
    "xlink_article"         : "http://www.ipol.im/pub/art/2013/20/",
    "input_condition"       : [ "(input0_size_x==input1_size_x)and(input0_size_y==input1_size_y)",
                                "badparams",
                                "The images must have the same size" ],
    "thumbnail_size"        : 64
  },
  "build":
    [
      {
        "build_type"    : "make",
        "url"           : "http://www.ipol.im/pub/art/2013/20/phs_3.tar.gz", 
        "srcdir"        : "phs_3",
        "binaries"      : [ [".","horn_schunck_pyramidal"] ],
        "flags"         : "-j4"
      },
      {
        "build_type"    : "make",
        "url*previous"  : "http://www.ipol.im/pub/art/2013/20/imscript_dec2011.tar.gz", 
        "url"           : "http://151.80.24.28:8080/DemoSource/20/imscript_dec2011.tgz", 
        "srcdir"        : "imscript",
        "binaries"      : [ [".","bin/", "plambda"] ],
        "flags"          : "-j CFLAGS=-O3 IIOFLAGS='-lpng -ltiff -ljpeg -lm'",
        "scripts"       : [ ["demo_scripts", "run_method_noview.sh"],  
                            ["demo_scripts", "hs_uniform.sh"],
                            ["demo_scripts", "view_method.sh"],
                            ["demo_scripts", "colorwheel.tiff"] ]
      }
    ]
  ,
  "inputs": [ 
      {
          "type"            : "image", 
          "description"     : "I1",
          "max_pixels"      : "1024 * 1024",
          "max_weight"      : 5242880,
          "dtype"           : "3x8i",
          "ext"             : ".png"
      }, 
      {
          "type"            : "image", 
          "description"     : "I2",
          "max_pixels"      : "1024 * 1024",
          "max_weight"      : 5242880,
          "dtype"           : "3x8i",
          "ext"             : ".png"
      }, 
      {
          "type"              : "flow", 
          "description"       : "Ground truth", 
          "ext"               : ".tiff",
          "required"          : false
      } 
    ],
  "params": 
    [
      {
        "id"            : "alpha",
        "type"          : "range", 
        "label"         : "Weight of the regularization term, e.g. &alpha;=1 discontinuous flow,  &alpha;=40 smooth flow",
        "values"        : { "min":0.1, "max":100, "step":0.1, "default": 15 }
      }
    ],
  "run": [
      "cp ../../bin/horn_schunck_pyramidal ../../bin/phs",
      "run_method_noview.sh 4 $alpha 0.01 150 5 6 0.65 >stdout.txt",
      "view_method.sh ipoln  1",
      "view_method.sh ipol   1",
      "view_method.sh mid    1",
      "view_method.sh arrows 1",
      "python:self.algo_meta['hastruth'] = os.path.isfile(self.work_dir+'input_2.tiff')"
  ]
  ,
  "archive":
    {
      "files" : { "input_0.png"             : "input #1",
                  "input_1.png"             : "input #2",
                  "input_2.tiff"            : "ground truth",
                  "stuff_phs.tiff"          : "flow",
                  "stuff_phs.png"           : "flow as RGB image"
                },
      "params" :  [ "alpha" ]
    },
  "config":
    {
      "info_from_file": {  "sixerrors" : "sixerror_phs.txt"
                        }
    }
  ,
  "results": [
    {
      "type"          : "html_text", 
      "contents"      : [ 
        "<table style='margin-left:0px;margin-right:auto'>",
        "<tr>",
          "<td>",
            "<label> Color-coding of vectors: </label>",
            "<select ng-model=\"display.param1\" ng-init=\"display.param1='ipoln'\">",
              "<option ng-repeat=\"scheme in ['ipoln','ipol','mid','arrows']\" value=\"{{scheme}}\">", 
              "{{scheme}}",
              "</option>",
            "</select><br/>",
          "</td>",
          "<td>",
            "<img style=\"\" ng-src=\"{{work_url}}/cw.{{display.param1}}.1.png\" />",
          "</td>",
        "</tr>",
        "<table>"
      ]
    },
    {
      "type"          : "gallery",
      "label"         : "<h2>Images</h2>",
      "contents"      : 
        {   "Optical flow "                 : "stuff_phs.{{display.param1}}.1.png", 
            "meta.hastruth?Ground truth"    : "t.{{display.param1}}.1.png",
            "I1"                            : "input_0.png" ,
            "I2"                            : "input_1.png" ,
            "|flow|"                        : "stuff_phs_abs.png" ,
            "div(flow)"                     : "stuff_phs_div.png",
            "grad(flow)"                    : "stuff_phs_grad.png",
            "Warped I2"                     : "stuff_phs_inv.png",
            "Warped difference"             : "stuff_phs_aminv.png" ,
            "Warped average"                : "stuff_phs_apinv.png" ,
            "meta.hastruth?Endpoint error"  : "stuff_phs_fmt.{{display.param1}}.1.png",
            "meta.hastruth?Angular error"   : "stuff_phs_aerr.png"
        },
      "style"         : "{'height':Math.max(sizeY*ZoomFactor,350)+'px'}" 
    },
    {
      "type"          : "html_text", 
      "contents"      : [ 
          "<h2>Summary</h2>",
          "<div>",
          "<table border='1' cellpadding='6' cellspacing='0' style='margin-left:0px;margin-right:auto'>",
          "<tr bgcolor='#cccccc'>",
            "<td ></td>",
            "<th >Running time</th>",
            "<th >Average Backprojection Error</th>",
            "<th ng-if='meta.hastruth'>Average Endpoint Error</th>",
            "<th ng-if='meta.hastruth'>Average Angular Error</th>",
          "</tr>",
          "<tr>",
            "<th bgcolor='#cccccc'>phs</th>",
            "<td align='center'>{{info.run_time | number:2 }} s</td>",
            "<td align='center'>{{info.sixerrors.split(' ')[0]}} <i style='font-size:x-small'>gray levels</i></td>",
            "<td  ng-if='meta.hastruth' align='center'>{{info.sixerrors.split(' ')[2]}} <i style='font-size:x-small'>pixels</i></td>",
            "<td  ng-if='meta.hastruth' align='center'>{{info.sixerrors.split(' ')[4]}}&nbsp;ยบ</td>",
          "</tr>",
          "</table>",
          "</div>"
        ]
    },
    {
      "type"          : "file_download", 
      "label"         : "<h3>Download inputs:</h3>",
      "contents"      : { "first image I1"  : "input_0.png", 
                          "second image I2" : "input_1.png",
                          "ground truth"    : "input_2.tiff"
                        }
    },
    {
      "type"          : "file_download", 
      "label"         : "<h3>Download computed optical flow:</h3>",
      "contents"      : { "tiff": "stuff_phs.tiff", 
                          "flo" : "stuff_phs.flo",
                          "uv"  : "stuff_phs.uv" }
    },
    {
      "type"          : "html_text", 
      "contents"      : [ 
        "<p style='font-size:small'>Note on formats:",
        "<ul style='font-size:small'>",
          "<li>The <tt>.tiff</tt> file is a two-channel image with floating-point samples.</li>",
          "<li>The <tt>.flo</tt> file is the same fomat as in the",
            "<a href = 'http://vision.middlebury.edu/flow/code/flow-code/README.txt'>",
              "Middlebury database",
            "</a>.</li>",
          "<li>The <tt>.uv</tt> file can be read and written by ",
            "<a href='http://dev.ipol.im/~coco/file_uv.h'>simple</a> code.</li>",
        "</ul></p>"
      ]
    }
  ]
}